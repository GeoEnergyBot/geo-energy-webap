import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm'

// Supabase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
const supabaseUrl = 'https://ptkzsrlicfhufdnegwjl.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB0a3pzcmxpY2ZodWZkbmVnd2psIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI0NzA3NjAsImV4cCI6MjA2ODA0Njc2MH0.eI0eF_imdgGWPLiUULTprh52Jo9P69WGpe3RbCg3Afo';
const supabase = createClient(supabaseUrl, supabaseKey);

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö Telegram
let tg = window.Telegram.WebApp;
tg.expand();

const user = tg.initDataUnsafe.user;
console.log("üë§ Telegram user:", user);

if (!user) {
    document.getElementById("username").textContent = "–û—à–∏–±–∫–∞: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö Telegram";
    console.error("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ Telegram WebApp. –ó–∞–ø—É—Å—Ç–∏ –∏–≥—Ä—É –∏–∑ Telegram.");
} else {
    document.getElementById("username").textContent = user.first_name || user.username;
    document.getElementById("avatar").src = user.photo_url || "https://via.placeholder.com/40";

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–≥—Ä–æ–∫–∞ –≤ Supabase
    (async () => {
        const { data, error } = await supabase
            .from('players')
            .select('*')
            .eq('telegram_id', user.id)
            .single();

        console.log("üì¶ –ü–æ–ª—É—á–µ–Ω –∏–≥—Ä–æ–∫:", data);
        console.log("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏:", error);

        if (!data) {
            // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
            const { error: insertError } = await supabase.from('players').insert([{
                telegram_id: user.id,
                username: user.username,
                first_name: user.first_name,
                avatar_url: user.photo_url
            }]);

            if (insertError) {
                console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–≥—Ä–æ–∫–∞:", insertError);
                document.getElementById("username").textContent = "–û—à–∏–±–∫–∞ –±–∞–∑—ã";
            } else {
                console.log("‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∏–≥—Ä–æ–∫");
            }
        } else {
            console.log("‚úÖ –ò–≥—Ä–æ–∫ –Ω–∞–π–¥–µ–Ω:", data);
        }
    })();
}
